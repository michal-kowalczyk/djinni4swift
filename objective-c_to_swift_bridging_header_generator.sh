PROJECT_NAME='DjinniDemo'
MAIN_HEADER_FILE="ios_project/$PROJECT_NAME/$PROJECT_NAME-Bridging-Header.h"
MAIN_MM_FILE="ios_project/$PROJECT_NAME/$PROJECT_NAME-Bridging-Header.mm"
AUXILIARY_HEADER_FILE_NAME="$PROJECT_NAME-Auxiliary-Bridging-Header.h"
AUXILIARY_HEADER_FILE="ios_project/$PROJECT_NAME/$AUXILIARY_HEADER_FILE_NAME"

if [ ! -f $AUXILIARY_HEADER_FILE ]; then
  echo "//" > $AUXILIARY_HEADER_FILE
  echo "//  Use this file to import your target's public headers that you would like to expose to Swift." >> $AUXILIARY_HEADER_FILE
  echo "//" >> $AUXILIARY_HEADER_FILE
fi

echo "//" > $MAIN_HEADER_FILE
echo "//  This file is automatically generated in order to import djinni generated Objective-C++ public headers into Swift project." >> $MAIN_HEADER_FILE
echo "//  Do not modify this file. Changes are revoked after make command execution." >> $MAIN_HEADER_FILE
echo "//  In order to import additional Objective-C/C++ headers, use $AUXILIARY_HEADER_FILE." >> $MAIN_HEADER_FILE
echo "//" >> $MAIN_HEADER_FILE
echo "" >> $MAIN_HEADER_FILE

echo "//" > $MAIN_MM_FILE
echo "//  This file is automatically generated in order to import djinni generated Objective-C++ public headers into Swift project." >> $MAIN_MM_FILE
echo "//  Do not modify this file. Changes are revoked after make command execution." >> $MAIN_MM_FILE
echo "//  In order to import additional Objective-C/C++ headers, use $AUXILIARY_HEADER_FILE." >> $MAIN_MM_FILE
echo "//" >> $MAIN_MM_FILE
echo "" >> $MAIN_MM_FILE
echo "#import \"$PROJECT_NAME-Bridging-Header.h\"" >> $MAIN_MM_FILE

for PUBLIC_HEADER in `cd generated-src/objc && ls *.h | grep -v "+Private" && cd - > /dev/null`
do
  echo "#import \"$PUBLIC_HEADER\"" >> $MAIN_HEADER_FILE
done
echo "#import \"$AUXILIARY_HEADER_FILE_NAME\"" >> $MAIN_HEADER_FILE
